// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task_ops.proto

/*
Package engine is a generated protocol buffer package.

It is generated from these files:
	task_ops.proto

It has these top-level messages:
	OutputGlob
	PostProcessStep
	PostProcess
*/
package engine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OutputGlob struct {
	ParamName string   `protobuf:"bytes,1,opt,name=param_name,json=paramName" json:"param_name,omitempty"`
	Glob      []string `protobuf:"bytes,2,rep,name=glob" json:"glob,omitempty"`
}

func (m *OutputGlob) Reset()                    { *m = OutputGlob{} }
func (m *OutputGlob) String() string            { return proto.CompactTextString(m) }
func (*OutputGlob) ProtoMessage()               {}
func (*OutputGlob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OutputGlob) GetParamName() string {
	if m != nil {
		return m.ParamName
	}
	return ""
}

func (m *OutputGlob) GetGlob() []string {
	if m != nil {
		return m.Glob
	}
	return nil
}

type PostProcessStep struct {
	// Types that are valid to be assigned to Step:
	//	*PostProcessStep_GlobOutput
	Step isPostProcessStep_Step `protobuf_oneof:"step"`
}

func (m *PostProcessStep) Reset()                    { *m = PostProcessStep{} }
func (m *PostProcessStep) String() string            { return proto.CompactTextString(m) }
func (*PostProcessStep) ProtoMessage()               {}
func (*PostProcessStep) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isPostProcessStep_Step interface {
	isPostProcessStep_Step()
}

type PostProcessStep_GlobOutput struct {
	GlobOutput *OutputGlob `protobuf:"bytes,1,opt,name=glob_output,json=globOutput,oneof"`
}

func (*PostProcessStep_GlobOutput) isPostProcessStep_Step() {}

func (m *PostProcessStep) GetStep() isPostProcessStep_Step {
	if m != nil {
		return m.Step
	}
	return nil
}

func (m *PostProcessStep) GetGlobOutput() *OutputGlob {
	if x, ok := m.GetStep().(*PostProcessStep_GlobOutput); ok {
		return x.GlobOutput
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PostProcessStep) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PostProcessStep_OneofMarshaler, _PostProcessStep_OneofUnmarshaler, _PostProcessStep_OneofSizer, []interface{}{
		(*PostProcessStep_GlobOutput)(nil),
	}
}

func _PostProcessStep_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PostProcessStep)
	// step
	switch x := m.Step.(type) {
	case *PostProcessStep_GlobOutput:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobOutput); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PostProcessStep.Step has unexpected type %T", x)
	}
	return nil
}

func _PostProcessStep_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PostProcessStep)
	switch tag {
	case 1: // step.glob_output
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OutputGlob)
		err := b.DecodeMessage(msg)
		m.Step = &PostProcessStep_GlobOutput{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PostProcessStep_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PostProcessStep)
	// step
	switch x := m.Step.(type) {
	case *PostProcessStep_GlobOutput:
		s := proto.Size(x.GlobOutput)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PostProcess struct {
	Steps []*PostProcessStep `protobuf:"bytes,1,rep,name=steps" json:"steps,omitempty"`
}

func (m *PostProcess) Reset()                    { *m = PostProcess{} }
func (m *PostProcess) String() string            { return proto.CompactTextString(m) }
func (*PostProcess) ProtoMessage()               {}
func (*PostProcess) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PostProcess) GetSteps() []*PostProcessStep {
	if m != nil {
		return m.Steps
	}
	return nil
}

func init() {
	proto.RegisterType((*OutputGlob)(nil), "engine.OutputGlob")
	proto.RegisterType((*PostProcessStep)(nil), "engine.PostProcessStep")
	proto.RegisterType((*PostProcess)(nil), "engine.PostProcess")
}

func init() { proto.RegisterFile("task_ops.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x41, 0xab, 0x82, 0x40,
	0x14, 0x46, 0x9f, 0x4f, 0x9f, 0xe0, 0x1d, 0x78, 0xc1, 0x6c, 0x72, 0x13, 0x88, 0x2b, 0x37, 0xb9,
	0x30, 0xda, 0x05, 0x41, 0x9b, 0x5a, 0x95, 0x4c, 0x3f, 0x40, 0xc6, 0x18, 0x24, 0x52, 0xef, 0xe0,
	0xbd, 0xfe, 0xff, 0x70, 0x24, 0x8a, 0x76, 0xc3, 0x99, 0x8f, 0x73, 0xb8, 0xf0, 0xcf, 0x9a, 0x1e,
	0x15, 0x5a, 0xca, 0xed, 0x80, 0x8c, 0x32, 0x34, 0x7d, 0x73, 0xef, 0x4d, 0xba, 0x07, 0xb8, 0x8c,
	0x6c, 0x47, 0x3e, 0xb6, 0x58, 0xcb, 0x15, 0x80, 0xd5, 0x83, 0xee, 0xaa, 0x5e, 0x77, 0x26, 0xf6,
	0x12, 0x2f, 0x8b, 0x54, 0xe4, 0xc8, 0x59, 0x77, 0x46, 0x4a, 0x08, 0x9a, 0x16, 0xeb, 0xf8, 0x37,
	0xf1, 0xb3, 0x48, 0xb9, 0x77, 0x5a, 0xc2, 0xa2, 0x44, 0xe2, 0x72, 0xc0, 0x9b, 0x21, 0xba, 0xb2,
	0xb1, 0x72, 0x0b, 0x62, 0xfa, 0xaa, 0xd0, 0x89, 0x9d, 0x46, 0x14, 0x32, 0x9f, 0x8b, 0xf9, 0x3b,
	0x77, 0xfa, 0x51, 0x30, 0x0d, 0x67, 0x72, 0x08, 0x21, 0x20, 0x36, 0x36, 0xdd, 0x81, 0xf8, 0x30,
	0xca, 0x35, 0xfc, 0x4d, 0x98, 0x62, 0x2f, 0xf1, 0x33, 0x51, 0x2c, 0x5f, 0x9e, 0xaf, 0xaa, 0x9a,
	0x57, 0x75, 0xe8, 0xee, 0xdb, 0x3c, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x6b, 0xb0, 0x38, 0xf1,
	0x00, 0x00, 0x00,
}
